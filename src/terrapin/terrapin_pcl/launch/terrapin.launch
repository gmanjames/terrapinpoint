<launch>

    <!-- PointCloud2 data topic path -->
    <!--    This should be the rostopic path that terrapin publishes PointCloud2 data too -->
    <arg name="subscripe_to"  default="/camera/depth/points" />

    <!-- PCL Node Arguments -->
    <!-- Original: simply subscribes to the input data and publishes under a new topic -->
    <arg name="run_original"  default="false" />
    <!-- Filter: changes the PointCloud2 data density -->
    <arg name="run_filter"    default="false" />
    <!-- Keypoint Extractor: Gets keypoints from PointCloud2 data -->
    <arg name="run_keypoints" default="false"  />
    <!-- Registration: Compares point clouds -->
    <arg name="run_registration" default="true"  />

    <!--  -->
    <!-- Start with the empty_world.launch file -->
    <!--  -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name"   value="$(find terrapin_pcl)/worlds/terrapin_hydrant.world"/>
        <arg name="paused"       value="false" />
        <arg name="use_sim_time" value="true"  />
        <arg name="gui"          value="true"  />
        <arg name="headless"     value="false" />
        <arg name="debug"        value="false" />
    </include>

    <param name="robot_description" command="$(find xacro)/xacro.py $(find turtlebot3_description)/urdf/turtlebot3_waffle.urdf.xacro" />

    <!-- Spawn a robot into Gazebo from the ROS Parameter Server -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-param robot_description -urdf -model turtlebot3_waffle" />

    <!-- Add a static transform publisher for viewing the point cloud data from camera -->
    <node name="point_cloud_broadcaster" pkg="tf" type="static_transform_publisher"
          args="1 0 0 0 0 0 1 base_link camera_link 100" />

    <!-- PCL NODE LAUNCHES BELOW -->

    <!-- Launch PCL original node -->
    <group if="$(arg run_original)">
      <node name="pcl_original" pkg="terrapin_pcl" type="original"
            args="input:=$(arg subscripe_to)" />
    </group>

    <!-- Launch PCL filter node -->
    <group if="$(arg run_filter)">
      <node name="pcl_filter" pkg="terrapin_pcl" type="filter"
            args="input:=$(arg subscripe_to)" />

      <!-- Launch PCL keypoints node -->
      <group if="$(arg run_keypoints)">
        <node name="pcl_keypoints" pkg="terrapin_pcl" type="keypoints"
              args="input:=/point_clouds/filtered" />
      </group>
    </group>

    <!-- Launch PCL registration node -->
    <group if="$(arg run_registration)">
      <node name="pcl_registration" pkg="terrapin_pcl" type="registration"
            args="input:=$(arg subscripe_to)" />
    </group>

</launch>
